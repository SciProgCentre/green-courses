# Трансляторы: Ccылки на интересные статьи

## Об устройстве, ускорении Python и его bytecode.

* [Python: как переменные работают на самом деле? Погружаемся в байткод и C](https://habr.com/ru/articles/845314/)
* [Ускорение производительности Python в 3.11](https://habr.com/ru/articles/662087/)
* [Как устроен парсер Python, и как втрое уменьшить потребление им памяти](https://habr.com/ru/articles/314062/)

## Простой компилятор на Python

Внимание это не компилятор Python, а компилятор написанный на Python.

* [Компилятор за выходные: синтаксические деревья](https://habr.com/ru/articles/786158/)
* [Компилятор за выходные: лексер и парсер](https://habr.com/ru/articles/787800/)
* [Про́клятый огонь, или магия препроцессора C](https://habr.com/ru/articles/787442/)
* [Компилятор за выходные: таблицы символов](https://habr.com/ru/articles/789310/)
* [Компилятор за выходные: избавляемся от переменных](https://habr.com/ru/articles/793524/)
* [Компилятор за выходные: наконец-то ассемблер](https://habr.com/ru/articles/829314/)

## О компиляции в нативный код

* [Эльфы и пингвины: что такое ELF и как он работает в Linux?](https://habr.com/ru/companies/timeweb/articles/784534/)

[//]: # (![PDF]&#40;../../../external/habr/weekend_compilator/Компилятор_за_выходные_синтаксические_деревья _ Хабр.pdf&#41;&#41;)
